apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx
  namespace: nginx-ingress
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: nginx.org/ingress-controller
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx-ingress
  namespace: nginx-ingress
spec:
  selector:
    matchLabels:
      app: nginx-ingress
  template:
    metadata:
      labels:
        app: nginx-ingress
    spec:
      serviceAccountName: nginx-ingress
      containers:
      - image: nginx/nginx-ingress:latest
        imagePullPolicy: IfNotPresent
        name: nginx-ingress
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        - name: readiness-port
          containerPort: 8081
        - name: prometheus
          containerPort: 9113
        readinessProbe:
         httpGet:
           path: /nginx-ready
           port: readiness-port
         periodSeconds: 1
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
         #limits:
         #  cpu: "1"
         #  memory: "1Gi"
        securityContext:
          allowPrivilegeEscalation: true
          runAsUser: 101 #nginx
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        args:
          - -nginx-configmaps=$(POD_NAMESPACE)/nginx-config
          - -default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret
          - -v=3 # Enables extensive logging. Useful for troubleshooting.
          - -report-ingress-status
          - -external-service=nginx-ingress
         #- -enable-prometheus-metrics
         #- -global-configuration=$(POD_NAMESPACE)/nginx-configuration
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-linds-sonarr
  namespace: default
spec:
  rules:
  - host: sonarr.linds.com.au
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: linds-docker
            port:
              number: 8989
  ingressClassName: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-linds-radarr
  namespace: default
spec:
  rules:
  - host: radarr.linds.com.au
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: linds-docker
            port:
              number: 7878
  ingressClassName: nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-linds-jackett
  namespace: default
spec:
  rules:
  - host: jackett.linds.com.au
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: linds-docker
            port:
              number: 9117
  ingressClassName: nginx
---